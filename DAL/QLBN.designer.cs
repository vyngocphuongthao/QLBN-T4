#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLBenhNhan")]
	public partial class QLBNDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBacSy(BacSy instance);
    partial void UpdateBacSy(BacSy instance);
    partial void DeleteBacSy(BacSy instance);
    partial void InsertBenhNhan(BenhNhan instance);
    partial void UpdateBenhNhan(BenhNhan instance);
    partial void DeleteBenhNhan(BenhNhan instance);
    partial void InsertKhamBenh(KhamBenh instance);
    partial void UpdateKhamBenh(KhamBenh instance);
    partial void DeleteKhamBenh(KhamBenh instance);
    #endregion
		
		public QLBNDataContext() : 
				base(global::DAL.Properties.Settings.Default.QLBenhNhanConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLBNDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLBNDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLBNDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLBNDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BacSy> BacSies
		{
			get
			{
				return this.GetTable<BacSy>();
			}
		}
		
		public System.Data.Linq.Table<BenhNhan> BenhNhans
		{
			get
			{
				return this.GetTable<BenhNhan>();
			}
		}
		
		public System.Data.Linq.Table<KhamBenh> KhamBenhs
		{
			get
			{
				return this.GetTable<KhamBenh>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BacSy")]
	public partial class BacSy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _msbacsy;
		
		private string _hotenbacsy;
		
		private EntitySet<KhamBenh> _KhamBenhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmsbacsyChanging(string value);
    partial void OnmsbacsyChanged();
    partial void OnhotenbacsyChanging(string value);
    partial void OnhotenbacsyChanged();
    #endregion
		
		public BacSy()
		{
			this._KhamBenhs = new EntitySet<KhamBenh>(new Action<KhamBenh>(this.attach_KhamBenhs), new Action<KhamBenh>(this.detach_KhamBenhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msbacsy", DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string msbacsy
		{
			get
			{
				return this._msbacsy;
			}
			set
			{
				if ((this._msbacsy != value))
				{
					this.OnmsbacsyChanging(value);
					this.SendPropertyChanging();
					this._msbacsy = value;
					this.SendPropertyChanged("msbacsy");
					this.OnmsbacsyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hotenbacsy", DbType="NVarChar(150)")]
		public string hotenbacsy
		{
			get
			{
				return this._hotenbacsy;
			}
			set
			{
				if ((this._hotenbacsy != value))
				{
					this.OnhotenbacsyChanging(value);
					this.SendPropertyChanging();
					this._hotenbacsy = value;
					this.SendPropertyChanged("hotenbacsy");
					this.OnhotenbacsyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BacSy_KhamBenh", Storage="_KhamBenhs", ThisKey="msbacsy", OtherKey="msbacsy")]
		public EntitySet<KhamBenh> KhamBenhs
		{
			get
			{
				return this._KhamBenhs;
			}
			set
			{
				this._KhamBenhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhamBenhs(KhamBenh entity)
		{
			this.SendPropertyChanging();
			entity.BacSy = this;
		}
		
		private void detach_KhamBenhs(KhamBenh entity)
		{
			this.SendPropertyChanging();
			entity.BacSy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BenhNhan")]
	public partial class BenhNhan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _msbn;
		
		private string _scmnd;
		
		private string _hoten;
		
		private string _diachi;
		
		private EntitySet<KhamBenh> _KhamBenhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmsbnChanging(string value);
    partial void OnmsbnChanged();
    partial void OnscmndChanging(string value);
    partial void OnscmndChanged();
    partial void OnhotenChanging(string value);
    partial void OnhotenChanged();
    partial void OndiachiChanging(string value);
    partial void OndiachiChanged();
    #endregion
		
		public BenhNhan()
		{
			this._KhamBenhs = new EntitySet<KhamBenh>(new Action<KhamBenh>(this.attach_KhamBenhs), new Action<KhamBenh>(this.detach_KhamBenhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msbn", DbType="NVarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string msbn
		{
			get
			{
				return this._msbn;
			}
			set
			{
				if ((this._msbn != value))
				{
					this.OnmsbnChanging(value);
					this.SendPropertyChanging();
					this._msbn = value;
					this.SendPropertyChanged("msbn");
					this.OnmsbnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scmnd", DbType="NVarChar(25)")]
		public string scmnd
		{
			get
			{
				return this._scmnd;
			}
			set
			{
				if ((this._scmnd != value))
				{
					this.OnscmndChanging(value);
					this.SendPropertyChanging();
					this._scmnd = value;
					this.SendPropertyChanged("scmnd");
					this.OnscmndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoten", DbType="NVarChar(150)")]
		public string hoten
		{
			get
			{
				return this._hoten;
			}
			set
			{
				if ((this._hoten != value))
				{
					this.OnhotenChanging(value);
					this.SendPropertyChanging();
					this._hoten = value;
					this.SendPropertyChanged("hoten");
					this.OnhotenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diachi", DbType="NVarChar(250)")]
		public string diachi
		{
			get
			{
				return this._diachi;
			}
			set
			{
				if ((this._diachi != value))
				{
					this.OndiachiChanging(value);
					this.SendPropertyChanging();
					this._diachi = value;
					this.SendPropertyChanged("diachi");
					this.OndiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BenhNhan_KhamBenh", Storage="_KhamBenhs", ThisKey="msbn", OtherKey="msbn")]
		public EntitySet<KhamBenh> KhamBenhs
		{
			get
			{
				return this._KhamBenhs;
			}
			set
			{
				this._KhamBenhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhamBenhs(KhamBenh entity)
		{
			this.SendPropertyChanging();
			entity.BenhNhan = this;
		}
		
		private void detach_KhamBenhs(KhamBenh entity)
		{
			this.SendPropertyChanging();
			entity.BenhNhan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhamBenh")]
	public partial class KhamBenh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _msbn;
		
		private string _msbacsy;
		
		private System.Nullable<System.DateTime> _ngaykham;
		
		private string _ghichu;
		
		private EntityRef<BacSy> _BacSy;
		
		private EntityRef<BenhNhan> _BenhNhan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmsbnChanging(string value);
    partial void OnmsbnChanged();
    partial void OnmsbacsyChanging(string value);
    partial void OnmsbacsyChanged();
    partial void OnngaykhamChanging(System.Nullable<System.DateTime> value);
    partial void OnngaykhamChanged();
    partial void OnghichuChanging(string value);
    partial void OnghichuChanged();
    #endregion
		
		public KhamBenh()
		{
			this._BacSy = default(EntityRef<BacSy>);
			this._BenhNhan = default(EntityRef<BenhNhan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msbn", DbType="NVarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string msbn
		{
			get
			{
				return this._msbn;
			}
			set
			{
				if ((this._msbn != value))
				{
					if (this._BenhNhan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmsbnChanging(value);
					this.SendPropertyChanging();
					this._msbn = value;
					this.SendPropertyChanged("msbn");
					this.OnmsbnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msbacsy", DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string msbacsy
		{
			get
			{
				return this._msbacsy;
			}
			set
			{
				if ((this._msbacsy != value))
				{
					if (this._BacSy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmsbacsyChanging(value);
					this.SendPropertyChanging();
					this._msbacsy = value;
					this.SendPropertyChanged("msbacsy");
					this.OnmsbacsyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaykham", DbType="Date")]
		public System.Nullable<System.DateTime> ngaykham
		{
			get
			{
				return this._ngaykham;
			}
			set
			{
				if ((this._ngaykham != value))
				{
					this.OnngaykhamChanging(value);
					this.SendPropertyChanging();
					this._ngaykham = value;
					this.SendPropertyChanged("ngaykham");
					this.OnngaykhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ghichu", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ghichu
		{
			get
			{
				return this._ghichu;
			}
			set
			{
				if ((this._ghichu != value))
				{
					this.OnghichuChanging(value);
					this.SendPropertyChanging();
					this._ghichu = value;
					this.SendPropertyChanged("ghichu");
					this.OnghichuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BacSy_KhamBenh", Storage="_BacSy", ThisKey="msbacsy", OtherKey="msbacsy", IsForeignKey=true)]
		public BacSy BacSy
		{
			get
			{
				return this._BacSy.Entity;
			}
			set
			{
				BacSy previousValue = this._BacSy.Entity;
				if (((previousValue != value) 
							|| (this._BacSy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BacSy.Entity = null;
						previousValue.KhamBenhs.Remove(this);
					}
					this._BacSy.Entity = value;
					if ((value != null))
					{
						value.KhamBenhs.Add(this);
						this._msbacsy = value.msbacsy;
					}
					else
					{
						this._msbacsy = default(string);
					}
					this.SendPropertyChanged("BacSy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BenhNhan_KhamBenh", Storage="_BenhNhan", ThisKey="msbn", OtherKey="msbn", IsForeignKey=true)]
		public BenhNhan BenhNhan
		{
			get
			{
				return this._BenhNhan.Entity;
			}
			set
			{
				BenhNhan previousValue = this._BenhNhan.Entity;
				if (((previousValue != value) 
							|| (this._BenhNhan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BenhNhan.Entity = null;
						previousValue.KhamBenhs.Remove(this);
					}
					this._BenhNhan.Entity = value;
					if ((value != null))
					{
						value.KhamBenhs.Add(this);
						this._msbn = value.msbn;
					}
					else
					{
						this._msbn = default(string);
					}
					this.SendPropertyChanged("BenhNhan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
